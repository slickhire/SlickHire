from django.db import models

class Person(models.Model):
    checkbox = models.CharField(max_length=1, default="")
    name = models.CharField(max_length=30)
    mobile = models.CharField(max_length=30, primary_key=True)
    institute = models.CharField(max_length=30)
    education = models.CharField(max_length=30)
    employer = models.CharField(max_length=30)
    skills = models.CharField(max_length=30)
    score = models.CharField(max_length=30)
    salary = models.CharField(max_length=30)
    email = models.CharField(max_length=30)
    status = models.CharField(max_length=30)
    onlinetestscore = models.IntegerField(default=0)
    experience = models.CharField(max_length=30)
    expectedCtc = models.CharField(max_length=30, default="")
    notice = models.CharField(max_length=30, default="")
    stringId = models.CharField(max_length=30, db_index=True)
    questions = models.CharField(max_length=30)
    reminderscount = models.IntegerField(default=0)
    nextReminderTimestamp = models.IntegerField(default=0)
    onlinetesteval = models.IntegerField(default=-1)
    onlinetestcompileerrors = models.IntegerField(default=0)
    onlinetestcomplete = models.IntegerField(default=0)
    question1 = models.IntegerField(default=0)
    question2 = models.IntegerField(default=0)
    question3 = models.IntegerField(default=0)
    question4 = models.IntegerField(default=0)
    question5 = models.IntegerField(default=0)
    answer1 = models.TextField(default="0")
    answer2 = models.TextField(default="0")
    answer3 = models.TextField(default="0")
    answer4 = models.TextField(default="0")
    answer5 = models.TextField(default="0")

class JobProfile(models.Model):
    jobId = models.CharField(max_length=100, primary_key=True)
    designation = models.CharField(max_length=30)
    experience = models.CharField(max_length=30)
    salary = models.CharField(max_length=30)
    notice = models.CharField(max_length=30)
    skills = models.CharField(max_length=30)
    emails = models.CharField(max_length=100)
    salary1 = models.CharField(max_length=30)
    salary2 = models.CharField(max_length=30)
    notice1 = models.CharField(max_length=30)
    notice2 = models.CharField(max_length=30)
    exp1 = models.CharField(max_length=30)
    exp2 = models.CharField(max_length=30)
    calendar = models.CharField(max_length=5000)
    candidatesCount = models.IntegerField(default=0)
    discardedCount = models.IntegerField(default=0)
    optedOutCount = models.IntegerField(default=0)
    interestedCount = models.IntegerField(default=0)
    shortlistedCount = models.IntegerField(default=0)
    interviewScheduledCount = models.IntegerField(default=0)
    interviewedCount = models.IntegerField(default=0)
    rejectedCount = models.IntegerField(default=0)
    onHoldCount = models.IntegerField(default=0)
    onlineProgExamCategory = models.IntegerField(default=1)
    onlineProgExamPendingCount = models.IntegerField(default=0)
    onlineProgExamDoneCount = models.IntegerField(default=0)
    question1 = models.IntegerField(default=0)
    question2 = models.IntegerField(default=0)
    question3 = models.IntegerField(default=0)
    question4 = models.IntegerField(default=0)
    question5 = models.IntegerField(default=0)

class JobSettings(models.Model):
	companyId = models.CharField(max_length=30, primary_key=True)
	smsEnabled = models.BooleanField(default=False)
	whatsappEnabled = models.BooleanField(default=False)
	emailEnabled = models.BooleanField(default=False)
	voiceEnabled = models.BooleanField(default=False)
	remindersCount = models.IntegerField(default=0)

class InternalLink(models.Model):
    linkId = models.CharField(max_length=30, primary_key=True)
    candidates = models.CharField(max_length=500)
	
# Model answer keys and testcases for programs
# type of question include "CHOICE" (1) , "PROGRAM"(0)
# format for question is string. example: "Write a sample program to 
# determine whether input is a leap year or not"
# Test format is: format is inputs;outputs
# example "2 3;5" here 2 and 3 are inputs and 5 is the expected output
class OnlineTestKeys(models.Model):
    qid = models.IntegerField(primary_key=True)
    type = models.IntegerField()
    category = models.TextField()
    question = models.TextField()
    choice1 = models.TextField()
    choice2 = models.TextField()
    choice3 = models.TextField()
    choice4 = models.TextField()
    answer = models.TextField()
    test1 = models.TextField() 
    test2 = models.TextField()
    test3 = models.TextField()
    test4 = models.TextField()
    test5 = models.TextField()
